[metadata]
name = eovsapy
provides = eovsapy
description = "Python code and files for Expanded Owens Valley Solar Array"
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The EOVSA team
author_email = sijie.yu@njit.edu
license = BSD 2-Clause
license_file = LICENSE.rst
url = https://github.com/suncasa/eovsapy
edit_on_github = True
github_project = suncasa/eovsapy
platform = any
keywords = solar physics, solar, science, sun, wcs, coordinates
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.6,!=3.7.*,<3.9
packages = find:
include_package_data = True
setup_requires =
    setuptools_scm
install_requires =
    mysql-connector-python


[options.packages.find]
exclude = eovsapy._dev

[pycodestyle]
max_line_length = 110

[flake8]
max-line-length = 110
exclude =
    .git,
    .idea,
    .eggs,
    __pycache__,
    build,
    dist,
    eovsapy/__init__.py,
rst-directives =
    plot

[isort]
balanced_wrapping = True
skip = eovsapy/__init__.py
default_section = THIRDPARTY
include_trailing_comma = True
known_first_party = eovsapy
length_sort = False
length_sort_sections = stdlib
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
sections = STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
    eovsapy/*setup*
    eovsapy/extern/*
    eovsapy/shellScript/*
    eovsapy/build/*
    eovsapy/dist/*
    eovsapy/*/tests/*
    eovsapy/version*
    eovsapy/__init__*
    */eovsapy/*setup*
    */eovsapy/extern/*
    eovsapy/*/shellScript/*
    eovsapy/*/build/*
    eovsapy/*/dist/*
    */eovsapy/*/tests/*
    */eovsapy/version*

[coverage:report]
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover
# Don't complain about packages we have installed
    except ImportError
# Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
# Don't complain about script hooks
    def main\(.*\):
# Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
